package main

import (
	"bufio"
	"fmt"
	"os"

	"github.com/ethantrithon/wolframalpha"
)

func main() {
	wolframalpha.APIKey("YOUR-API-KEY-HERE")
	//Note: "API Key" here is the general term,
	//Wolfram|Alpha calls it your "App ID" in the developer portal.

	stdin := bufio.NewScanner(os.Stdin)
	fmt.Print("What would you like to know? ")
	stdin.Scan()
	text := stdin.Text()

	//Send your query to the Spoken Results API.
	//The "standard" functions will return a channel where the result will
	//appear and run in their own goroutine
	answerChannelSpoken := wolframalpha.AskQuestionSpoken(text)
	answerChannel := wolframalpha.AskQuestion(text)

	//Here you could do other things while you wait for the API calls to finish

	spokenResult := <-answerChannelSpoken //string
	fullResult := <-answerChannel         //*wolframalpha.FullResult

	//will be "" if an error occurred somewhere
	fmt.Println(spokenResult)

	//"GetAnswer" is a special function which pulls the most likely answer from an
	//API call result. Currently, the order is:
	//1. Look for dates (19th January 2038)
	//2. Look for numbers, possibly with units (5770 or 5770 Kelvin)
	//3. "Fall back" to the longest answer string available
	//Be careful! If an error occurred during the *sending* of the request, the
	//resulting *wolframalpha.FullResult will be nil!
	answer, _ := fullResult.GetAnswer() //other return value is an error

	fmt.Println(answer)
}
